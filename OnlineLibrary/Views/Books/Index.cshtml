@model PaginatedList<OnlineLibrary.Models.Book>

@{
    ViewData["Title"] = "Книги";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="mt-3">Книги</h2>

<div class="row m-5">
    @foreach (var book in Model)
    {
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">@book.Title</h5>
                <h6 class="card-subtitle mb-2 text-muted">@book.Author</h6>
                <p class="card-text">@book.Description</p>
            </div>
            <div class="card-buttons">
                <a href="@Url.Action("Edit", "Books", new { id = book.Id })" class="btn btn-custom btn-edit">Редактировать</a>
                <a href="#" class="btn btn-custom btn-favorite">★ Добавить в избранное</a>
                @if (!string.IsNullOrEmpty(book.FilePath))
                {
                    <a href="@Url.Content($"~/{book.FilePath}")" class="btn btn-custom btn-download">Скачать (PDF)</a>
                }
                <a href="@Url.Action("Details", "Books", new { id = book.Id })" class="btn btn-custom btn-details">Подробнее</a>
            </div>
        </div>
    }

    @section Scripts {
        <script>
            function addToFavorites(bookId) {
                fetch('/Favorites/Add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    body: JSON.stringify({ bookId: bookId })
                }).then(response => {
                    if (response.ok) {
                        alert('Книга добавленна в избранное!');
                    } else {
                        alert('Ошибка добавления в избранное.');
                    }
                });
            }
        </script>
    }
</div>

<nav class="m-5">
    <ul class="pagination justify-content-center">
        @if (Model.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link" aria-hidden="true">&laquo;</span>
            </li>
        }

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            if (i == Model.PageIndex)
            {
                <li class="page-item active">
                    <span class="page-link">@i</span>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@i">@i</a>
                </li>
            }
        }

        @if (Model.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link" aria-hidden="true">&raquo;</span>
            </li>
        }
    </ul>
</nav>

<div style="height: 50px">
</div>
